//TEST_1:棋盘初始化测试
	/*
	SPACE chessboard[LENGTH][LENGTH];
	set_individual_chessboard(chessboard);
	printf("%d %d %d", chessboard[1][2].x, chessboard[5][6].y, chessboard[2][2].belong);
	*/
//TEST_2:打印棋盘测试
	/*
	SPACE chessboard[LENGTH][LENGTH];
	set_individual_chessboard(chessboard);
	print_chessboard(chessboard);
	*/
//TEST_3:隐藏光标测试
	/*
	SPACE chessboard[LENGTH][LENGTH];
	set_individual_chessboard(chessboard);
	print_chessboard(chessboard);
	*/
//TEST_4:人类默认执黑落子测试(未进行无法落子情况检验）
	/*
	SPACE chessboard[LENGTH][LENGTH];
	set_individual_chessboard(chessboard);
	print_chessboard(chessboard);
	int x, y;
	scanf_s("%d%d", &x, &y);
	human_player_play(x, y, chessboard);
	print_chessboard(chessboard);
	*/
//TEST_5:人类开局随机获得先后手并告知，并直接进行一次落子(未进行无法落子情况检验）
	/*
	srand((unsigned int)time(NULL));
	int color = before_begin();
	SPACE chessboard[LENGTH][LENGTH];
	set_individual_chessboard(chessboard);
	print_chessboard(chessboard);
	int x, y;
	scanf_s("%d%d", &x, &y);
	human_player_play(x, y, chessboard,color);
	print_chessboard(chessboard);
	*/
//TEST_6:重复落子情况检验
	///*
	srand((unsigned int)time(NULL));
	int color = before_begin();
	SPACE chessboard[LENGTH][LENGTH];
	set_individual_chessboard(chessboard);
	print_chessboard(chessboard);
	int x, y;
	scanf_s("%d%d", &x, &y);
	human_player_play(x, y, chessboard,color);
	print_chessboard(chessboard);
	scanf_s("%d%d", &x, &y);
	human_player_play(x, y, chessboard, color);
	print_chessboard(chessboard);
	//*/
//TEST_7:用随机落子模拟AI落子,进行轮流落子
	///*
	srand((unsigned int)time(NULL));
	int color = before_begin();
	SPACE chessboard[LENGTH][LENGTH];
	set_individual_chessboard(chessboard);
	print_chessboard(chessboard);
	int x, y;
	if(color==WHITE){
		AI_player_play(chessboard, BLACK);
		print_chessboard(chessboard);
	}
	int AI_color = (color == WHITE) ? BLACK : WHITE;
	while (1) {
		scanf_s("%d%d", &x, &y);
		human_player_play(x, y, chessboard, color);
		print_chessboard(chessboard);
		AI_player_play(chessboard, AI_color);
		print_chessboard(chessboard);
	}
	//*/
//TEST_8:测试胜利判定
	///*
	srand((unsigned int)time(NULL));
	int color = before_begin();
	SPACE chessboard[LENGTH][LENGTH];
	set_individual_chessboard(chessboard);
	print_chessboard(chessboard);
	int x, y;
	if(color==WHITE){
		AI_player_play(chessboard, BLACK);
		print_chessboard(chessboard);
	}
	int AI_color = (color == WHITE) ? BLACK : WHITE;
	while (1) {
		scanf_s("%d%d", &x, &y);
		human_player_play(x, y, chessboard, color);
		print_chessboard(chessboard);
		if(color==victory_condition(chessboard)){
			printf("You Win!\n");
			break;
		}
		AI_player_play(chessboard, AI_color);
		print_chessboard(chessboard);
		if (AI_color == victory_condition(chessboard)) {
			printf("AI Win!\n");
			break;
		}
	}
	//*/

//TEST_9:对set_individual_chessboard产生疑惑，于是测试
	
	srand((unsigned int)time(NULL));
	int color = before_begin();
	SPACE chessboard[LENGTH][LENGTH];
	set_individual_chessboard(chessboard);
	printf("%d\n", chessboard[0][0].score);
	printf("%d\n", chessboard[4][8].y);
	printf("%d\n", chessboard[5][7].belong);
	system("pause");
	print_chessboard(chessboard);